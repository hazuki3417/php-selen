name: Testing

on:
  workflow_dispatch:
  # push:
  #   branches: [ main ]

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Validate composer.json and composer.lock
      run: make composer COMMAND=validate

    - name: Install dependencies
      run: make package-install

    - name: Composer cache or restore
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

  test-php-latest:
    runs-on: ubuntu-latest
    needs: provision

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Composer cache or restore
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
          
    - name: Test
      run: make test-php-latest

  test-php-8_1:
    runs-on: ubuntu-latest
    needs: provision

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Composer cache or restore
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
          
    - name: Test
      run: make test-php-8.1

  test-php-8_0:
    runs-on: ubuntu-latest
    needs: provision

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Composer cache or restore
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
          
    - name: Test
      run: make test-php-8.0

  generate-api-coverage:
    runs-on: ubuntu-latest
    needs: [
        test-php-latest,
        test-php-8_1,
        test-php-8_0
      ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Composer cache or restore
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Generate api coverage
      run: make generate-api-coverage

    - name: upload artifact documents
      uses: actions/upload-artifact@v2
      with:
        name: documents
        path: docs

  generate-api-document:
    runs-on: ubuntu-latest
    needs: [
        test-php-latest,
        test-php-8_1,
        test-php-8_0
      ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Composer cache or restore
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Generate api document
      run: make generate-api-document

    - name: upload artifact documents
      uses: actions/upload-artifact@v2
      with:
        name: documents
        path: docs

  upload-api-coverage:
    runs-on: ubuntu-latest
    needs: generate-api-coverage

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: download artifact documents
      uses: actions/download-artifact@v2
      with:
        name: documents
        path: docs

    # [Reference]
    # https://github.com/aws-actions/configure-aws-credentials
    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_CLI_ACCESS_KEY}}
        aws-secret-access-key: ${{secrets.AWS_CLI_SECRET_ACCESS_KEY}}
        aws-region: ap-northeast-1

    - name: Upload coverage files
      env: 
        S3_BUCKET_NAME: ${{secrets.AWS_S3_BUCKET_NAME}}
      run: |
        aws s3 sync ./docs/coverage s3://$S3_BUCKET_NAME/coverage




  upload-api-document:
    runs-on: ubuntu-latest
    needs: generate-api-document

    # [Reference]
    # https://github.com/aws-actions/configure-aws-credentials
    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: download artifact documents
      uses: actions/download-artifact@v2
      with:
        name: documents
        path: docs

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_CLI_ACCESS_KEY}}
        aws-secret-access-key: ${{secrets.AWS_CLI_SECRET_ACCESS_KEY}}
        aws-region: ap-northeast-1

    - name: Upload api document
      env: 
        S3_BUCKET_NAME: ${{secrets.AWS_S3_BUCKET_NAME}}
      run: |
        aws s3 sync ./docs/phpdoc s3://$S3_BUCKET_NAME/phpdoc
